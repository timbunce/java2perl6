A quick rough list in no particular order:

Add way to specify extra/overriding type mappings externally.

Improve test coverage.

Handle constants in class/interface definitions. For example:
    public static final int CONCUR_READ_ONLY;

Find a way to extract the actual constant value from Java and embed
into the generated class/role?

Someone with reasonable knowledge of perl6 and java should sanity check the
translation and document the issues/tradeoffs.

Write some tests that run perl6 code that consumes a generated role.

Move multi-line strings used for comparison tests out from the test script
into separate text files. Then if a test fails write the new output to a
different file (same name, extra extension). That way when the code
generation is changed the tests can be sync'd just by renaming the new file
over the old one. (This approach has worked well for the NYTProf tests.)
